module "aws_rds" {
  allocated_storage              = 20    # The size of the database (Gb)
  allow_major_version_upgrade    = false # Allows major version upgrades
  allowed_cidr_blocks            = []    # List of allowed CIDR blocks
  apply_immediately              = false # If true, apply changes immediately
  associate_security_group_ids   = []    # Security group IDs to associate
  auto_minor_version_upgrade     = true  # Allows minor version upgrades
  availability_zone              = ""    # The AZ for the RDS instance
  backup_retention_period        = 7     # Number of days to retain backups
  backup_window                  = "22:00-03:00" # Daily time range for backups
  ca_cert_identifier             = ""    # SSL certificate identifier file to use
  charset_name                   = ""    # Database charset
  copy_tags_to_snapshot          = true  # Copy tags to snapshots
  database_manage_master_user_password = "" # denotes whether the master user password is managed by AWS
  database_master_user_secret_kms_key_id = "" # KMS key identifier for the secret
  database_name                  = ""    # The name of the database
  database_password              = ""    # The password for the database
  database_port                  = 3306  # The port number for the database
  database_user                  = ""    # The username for the database
  db_options                     = []    # A list of DB options to be applied to the instance
  db_parameter                   = []    # List of DB parameters to apply
  db_parameter_group             = ""    # The name of the DB parameter group to use
  db_subnet_group_name           = ""    # The name of the DB subnet group to use
  deletion_protection            = false # If true, the database can't be deleted
  dns_zone_id                    = ""    # The ID of the associated Route53 DNS zone
  enabled_cloudwatch_logs_exports = []   # List of log types to export to CloudWatch
  engine                         = "mysql" # The database engine to use
  engine_version                 = "5.7" # The version of the database engine
  final_snapshot_identifier      = ""     # Identifier for the final snapshot on deletion
  host_name                      = "db"   # Hostname of the database instance
  iam_database_authentication_enabled = false # Enable IAM authentication for the database
  instance_class                 = "db.t2.micro" # The instance type of the RDS instance
  iops                           = 0      # The amount of provisioned IOPS (Can't be 0 if used)
  kms_key_arn                    = ""     # The ARN for the KMS encryption key
  license_model                  = "license-included" # The license model for the database
  maintenance_window             = "Mon:03:00-Mon:04:00" # The weekly time range for maintenance
  major_engine_version           = ""     # The major engine version
  max_allocated_storage          = 100    # Maximum allocated storage
  monitoring_interval            = 0      # Monitoring interval (in seconds)
  monitoring_role_arn            = ""     # ARN of the IAM role that permits RDS to send OS metrics to CloudWatch
  multi_az                       = false  # Specifies if the RDS instance is multi-AZ
  option_group_name              = ""     # The name of the option group to associate
  parameter_group_name           = ""     # The name of the DB parameter group to use
  performance_insights_enabled   = false  # If true, enable performance insights
  performance_insights_kms_key_id = ""    # The ARN for the KMS key to encrypt performance insights data
  performance_insights_retention_period = 7 # The performance insights retention period
  publicly_accessible            = false  # If true, the instance is publicly accessible
  replicate_source_db            = ""     # The ARN of the source database if this is a read replica
  restore_to_point_in_time       = ""     # Restore time for the DB instance
  security_group_ids             = []     # Security group IDs associated with the DB instance
  skip_final_snapshot            = true   # If true, skip taking a final snapshot before deleting the DB instance
  snapshot_identifier            = ""     # The identifier for a snapshot to create the DB from
  storage_encrypted              = true   # If true, storage is encrypted
  storage_throughput             = 0      # The storage throughput in MiB/s
  storage_type                   = "standard" # The storage type (standard, gp2, or io1)
  subnet_ids                     = []     # A list of subnet IDs to launch the DB instance in
  timeouts                       = {
    create = "40m"  # Timeout for create
    delete = "60m"  # Timeout for delete
    update = "80m"  # Timeout for update
  }
  timezone                       = ""     # The timezone for the DB instance
  vpc_id                         = ""     # The VPC ID for the database instance

  source                         = "git::git@github.com:cloudposse/terraform-aws-rds.git//.?ref=master"
  env_name                       = "production-us-east-2" # Environment name
  layer_name                     = "production-us-east-2" # Layer name
  module_name                    = "aws_rds"                # Module name
}